<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="I18N_InstallUraCore" xml:space="preserve">
    <value>自动安装ura-core</value>
  </data>
  <data name="I18N_Instruction" xml:space="preserve">
    <value>启动菜单(用↑和↓切换选项,回车确认)</value>
  </data>
  <data name="I18N_LaunchFail" xml:space="preserve">
    <value>URA启动失败，按回车键退出程序</value>
  </data>
  <data name="I18N_LocalizationData_FileCorrupt" xml:space="preserve">
    <value>未找到目标文件或目标文件不符合格式</value>
  </data>
  <data name="I18N_LocalizationData_FormatRequirement" xml:space="preserve">
    <value>本地化仅支持格式为Dictionary&lt;textdata.category,Dictionary&lt;textdata.index,string&gt;&gt;的JSON</value>
  </data>
  <data name="I18N_LocalizationData_InputPathPrompt" xml:space="preserve">
    <value>请输入完整的文件路径(如G:\Umamusume\localized_data\text_data.json)</value>
  </data>
  <data name="I18N_ManageDMMService" xml:space="preserve">
    <value>管理DMM服务信息</value>
  </data>
  <data name="I18N_Options" xml:space="preserve">
    <value>选项</value>
  </data>
  <data name="I18N_Options_BackToMenuInstruction" xml:space="preserve">
    <value>按任意键返回主菜单</value>
  </data>
  <data name="I18N_Options_Instruction" xml:space="preserve">
    <value>[grey](用[blue]&lt;空格&gt;[/]切换选项,按下[green]&lt;回车&gt;[/]保存并返回,[[X]]为选中状态)[/]</value>
  </data>
  <data name="I18N_SetLocalizedDataFilePath" xml:space="preserve">
    <value>设置本地化文件路径</value>
  </data>
  <data name="I18N_Start" xml:space="preserve">
    <value>启动！</value>
  </data>
  <data name="I18N_Start_Checking" xml:space="preserve">
    <value>[yellow]正在检测umamusume.exe是否运行[/]</value>
  </data>
  <data name="I18N_Start_Checking_AlreadyRunning" xml:space="preserve">
    <value>检测到umamusume.exe正在运行,直接启动服务器</value>
  </data>
  <data name="I18N_Start_Checking_Found" xml:space="preserve">
    <value>检测到{0}个正在运行的umamusume.exe</value>
  </data>
  <data name="I18N_Start_Checking_Log" xml:space="preserve">
    <value>[grey]日志: [/] {0}</value>
  </data>
  <data name="I18N_Start_GetToken" xml:space="preserve">
    <value>[bold blue]正在获取DMM Onetime Token[/]</value>
  </data>
  <data name="I18N_Start_Launching" xml:space="preserve">
    <value>正在启动umamusume.exe</value>
  </data>
  <data name="I18N_Start_Started" xml:space="preserve">
    <value>[bold green]已启动[/]</value>
  </data>
  <data name="I18N_Start_TokenFailed" xml:space="preserve">
    <value>获取DMM Onetime Token失败</value>
  </data>
  <data name="I18N_Start_TokenGot" xml:space="preserve">
    <value>已获取DMM Onetime Token</value>
  </data>
  <data name="I18N_UpdateAssets" xml:space="preserve">
    <value>更新数据文件</value>
  </data>
  <data name="I18N_UpdateProgram" xml:space="preserve">
    <value>更新程序</value>
  </data>
  <data name="I18N_UraCoreHelper_FoundAvailablePath" xml:space="preserve">
    <value>发现有效的游戏目录:{0}</value>
  </data>
  <data name="I18N_UraCoreHelper_FoundPaths" xml:space="preserve">
    <value>找到了{0}个可能的目录</value>
  </data>
  <data name="I18N_UraCoreHelper_InstallPrompt" xml:space="preserve">
    <value>是否要在此处安装?</value>
  </data>
  <data name="I18N_UraCoreHelper_InstallSuccess" xml:space="preserve">
    <value>安装到{0}成功,按任意键返回主菜单</value>
  </data>
  <data name="I18N_UraCoreHelper_NoInstalledModuleFound" xml:space="preserve">
    <value>未找到兼容模块或已安装，请先安装(https://github.com/MinamiChiwa/Trainers-Legend-G or https://github.com/Kimjio/umamusume-localify)</value>
  </data>
  <data name="I18N_Options_MultipleLanguagesSelected" xml:space="preserve">
    <value>多种语言同时选择，已恢复至默认，请重新设置</value>
  </data>
  <data name="I18N_ConsoleSizeSmall" xml:space="preserve">
    <value>[yellow]控制台尺寸过小:推荐尺寸为宽{0}、高{1}[/]</value>
  </data>
</root>