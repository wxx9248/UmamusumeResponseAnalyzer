<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Return" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Tabs_Core_ListenAddress" xml:space="preserve">
    <value>监听地址</value>
  </data>
  <data name="Tabs_Core_ListenAddressPrompt" xml:space="preserve">
    <value>请输入监听地址(默认:127.0.0.1 管理员权限时为0.0.0.0)</value>
  </data>
  <data name="Tabs_Core_ListenPort" xml:space="preserve">
    <value>监听端口</value>
  </data>
  <data name="Tabs_Core_ListenPortPrompt" xml:space="preserve">
    <value>请输入监听端口(默认:4693)</value>
  </data>
  <data name="Tabs_Core_RequestAdditionalHeader" xml:space="preserve">
    <value>请求含有额外内容</value>
  </data>
  <data name="Tabs_Core_Title" xml:space="preserve">
    <value>核心</value>
  </data>
  <data name="Tabs_Debug_SaveResponseForDebug" xml:space="preserve">
    <value>保存通讯文件</value>
  </data>
  <data name="Tabs_Debug_Title" xml:space="preserve">
    <value>调试</value>
  </data>
  <data name="Tabs_DMM_Caution" xml:space="preserve">
    <value>该功能需求一个不需要代理就能访问DMM/赛马娘的环境（在日本/有全局代理等，不包括加速器因为他们不会加速URA本身）。
该功能仅适合不喜欢每次都要启动DMM，或讨厌DMM经常更新的人，但仍需要安装DMMGamePlayer，且仍需其负责更新。
是否要启用此功能？</value>
  </data>
  <data name="Tabs_DMM_EditAccounts" xml:space="preserve">
    <value>编辑账号</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_Add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_InputName" xml:space="preserve">
    <value>输入备注</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_InputName_Duplicate" xml:space="preserve">
    <value>备注不可重复</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_InputSavePath" xml:space="preserve">
    <value>输入分离的SaveData路径(可以为空)</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_InputSplitPath" xml:space="preserve">
    <value>输入分离的可执行文件路径(可以为空)</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_Name" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_SavePath" xml:space="preserve">
    <value>分离的SaveData路径</value>
  </data>
  <data name="Tabs_DMM_EditAccounts_SplitPath" xml:space="preserve">
    <value>分离的可执行文件路径</value>
  </data>
  <data name="Tabs_DMM_EditMachineInformation" xml:space="preserve">
    <value>编辑机器信息</value>
  </data>
  <data name="Tabs_DMM_EditMachineInformation_InputHS" xml:space="preserve">
    <value>输入hdd_serial</value>
  </data>
  <data name="Tabs_DMM_EditMachineInformation_InputMA" xml:space="preserve">
    <value>输入mac_address</value>
  </data>
  <data name="Tabs_DMM_EditMachineInformation_InputMB" xml:space="preserve">
    <value>输入motherboard</value>
  </data>
  <data name="Tabs_DMM_EditMachineInformation_InputOS" xml:space="preserve">
    <value>输入user_os</value>
  </data>
  <data name="Tabs_DMM_EditMachineInformation_InputUmamusumePath" xml:space="preserve">
    <value>输入马娘执行文件路径</value>
  </data>
  <data name="Tabs_DMM_Enable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="Tabs_DMM_Title" xml:space="preserve">
    <value>DMM</value>
  </data>
  <data name="Tabs_DMM_ViewLauncherInformation" xml:space="preserve">
    <value>查看DMMGamePlayer信息</value>
  </data>
  <data name="Tabs_DMM_ViewLauncherInformation_Caution" xml:space="preserve">
    <value>不支持修改，如有需求请直接修改config.yaml。选中任意回车返回</value>
  </data>
  <data name="Tabs_Language_AutoDetect" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="Tabs_Language_English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Tabs_Language_Japanese" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="Tabs_Language_SimplifiedChinese" xml:space="preserve">
    <value>简体中文</value>
  </data>
  <data name="Tabs_Language_Title" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="Tabs_Localization_InputPath" xml:space="preserve">
    <value>输入本地化文件路径</value>
  </data>
  <data name="Tabs_Localization_Path" xml:space="preserve">
    <value>本地化文件路径</value>
  </data>
  <data name="Tabs_Localization_Title" xml:space="preserve">
    <value>本地化</value>
  </data>
  <data name="Tabs_Misc_Title" xml:space="preserve">
    <value>杂项</value>
  </data>
  <data name="Tabs_Misc_WriteAIInfo" xml:space="preserve">
    <value>AI</value>
  </data>
  <data name="Tabs_NetFilter_Caution" xml:space="preserve">
    <value>"代理"功能并非使URA本身经过代理，而是通过NetFilter驱动使本身无法经过代理的程序强制经过代理，如赛马娘本体、模拟器等。
启用此功能需要安装一个驱动（来自https://netfiltersdk.com/ ），这会请求一次管理员权限，并将其安装在%windir%\System32中。
NetFilter驱动也会被其他程序安装，比如ACGPower和Netch，此时会直接显示卸载而非安装。
该功能的效果与某些软件的TUN模式相同。
是否要启用此功能？</value>
  </data>
  <data name="Tabs_NetFilter_Enable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="Tabs_NetFilter_Host" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="Tabs_NetFilter_InputHost" xml:space="preserve">
    <value>输入IP地址: </value>
  </data>
  <data name="Tabs_NetFilter_InputPassword" xml:space="preserve">
    <value>输入密码(可以为空)</value>
  </data>
  <data name="Tabs_NetFilter_InputPort" xml:space="preserve">
    <value>输入端口: </value>
  </data>
  <data name="Tabs_NetFilter_InputPort_FormatError" xml:space="preserve">
    <value>端口只能是数字</value>
  </data>
  <data name="Tabs_NetFilter_InputUsername" xml:space="preserve">
    <value>输入用户名(可以为空)</value>
  </data>
  <data name="Tabs_NetFilter_Password" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="Tabs_NetFilter_Port" xml:space="preserve">
    <value>端口</value>
  </data>
  <data name="Tabs_NetFilter_SelectType" xml:space="preserve">
    <value>选择代理服务器类型</value>
  </data>
  <data name="Tabs_NetFilter_ServerType" xml:space="preserve">
    <value>代理类型</value>
  </data>
  <data name="Tabs_NetFilter_Title" xml:space="preserve">
    <value>代理</value>
  </data>
  <data name="Tabs_NetFilter_Username" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="Tabs_Plugin_Title" xml:space="preserve">
    <value>插件</value>
  </data>
  <data name="Tabs_Updater_ForceUseGithubToUpdate" xml:space="preserve">
    <value>强制使用GitHub更新</value>
  </data>
  <data name="Tabs_Updater_Title" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="Tabs_Repository_Targets" xml:space="preserve">
    <value>目标服务器</value>
  </data>
  <data name="Tabs_Repository_TargetsPrompt" xml:space="preserve">
    <value>请输入目标服务器，留空为不加限制，多个目标以逗号分隔。(日服建议填Cygames，繁中服建议填Komoe)</value>
  </data>
  <data name="Tabs_Repository_AdditionalPluginRepositoriesPrompt" xml:space="preserve">
    <value>请输入额外仓库的URL: </value>
  </data>
  <data name="Tabs_Repository_AdditionalPluginRepositoriesNamePrompt" xml:space="preserve">
    <value>请输入额外仓库的备注: </value>
  </data>
  <data name="Tabs_Repository_Title" xml:space="preserve">
    <value>插件仓库</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>添加</value>
  </data>
</root>